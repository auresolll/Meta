import { ResourceType, UploadApiErrorResponse, UploadApiOptions, UploadApiResponse, v2 as cloudinary } from 'cloudinary';
import { CloudinaryModuleOptions } from './cloudinary.options';
import { IFile, ISharpInputOptions, ISignedUploadUrlOptions } from './interfaces';
export declare class CloudinaryService {
    private readonly options;
    private logger;
    readonly cloudinary: typeof cloudinary;
    constructor(options: CloudinaryModuleOptions);
    uploadFile(file: IFile, options?: UploadApiOptions, sharpOptions?: ISharpInputOptions): Promise<UploadApiResponse | UploadApiErrorResponse>;
    createSignedUploadUrl(publicId: string, resourceType: ResourceType, options?: ISignedUploadUrlOptions): Promise<{
        url: string;
        publicId: string;
        apiKey: string;
        timestamp: string;
        eager: string;
        folder: string;
        signature: string;
    }>;
    get cloudinaryInstance(): typeof cloudinary;
}
